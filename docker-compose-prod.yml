name: ipwho-prod
services:
  redis:
    image: redis
    container_name: ipWho_Production_Redis
    volumes:
      - ipWho-Production-Redis:/data
    ports:
      - $REDIS_PORT:6379
    restart: unless-stopped

  frontend-build:
    build:
      context: ./Frontend-V2
      dockerfile: frontend.build.Dockerfile
    image: ipwho-frontend:build
    container_name: ipWho_frontend_build
    volumes:
      - /var/www/html/ipWho_Build:/app/build

  backend:
    build:
      context: Backend
      dockerfile: backend.build.Dockerfile
    image: ipwho-backend:production
    volumes:
      - /app/node_modules
      - /var/www/html/ipWho_Build:/app/frontendBuild
    container_name: "ipWho_Production_Backend"
    env_file:
      - $BACKEND_ENV
    ports:
      - $BACKEND_PORT:$BACKEND_PORT
    depends_on:
      - frontend-build
      - redis
    restart: unless-stopped


volumes:
  ipWho-Production-Redis:

# FOR CD use
# first: docker compose -f docker-compose-prod.yml --env-file /env/prod/ipWho/.env build --no-cache
# second: docker compose -f docker-compose-prod.yml --env-file /env/prod/ipWho/.env down
# third: docker compose -f docker-compose-prod.yml --project-name ipwho-prod --env-file /env/prod/ipWho/.env up -d
# fourth: docker rm ipWho_frontend_build