name: ipwho-dev

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: frontend.Dockerfile
    ports:
      - $FRONTEND_PORT:$FRONTEND_PORT
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    container_name: ipWho_frontend
    env_file:
      - $FRONTEND_ENV
    depends_on:
      - backend

  frontend-build:
    build:
      context: ./Frontend
      dockerfile: frontend.build.Dockerfile
    volumes:
      - ipWho-Frontend-Build:/app/build
      - /app/node_modules
    container_name: ipWho_frontend_build

  backend:
    build:
      context: ./Backend
      dockerfile: backend.Dockerfile
    ports:
      - $BACKEND_PORT:$BACKEND_PORT
    env_file:
      - $BACKEND_ENV
    container_name: ipWho_backend
    volumes:
      - ./Backend:/app
      - /app/dist
      - /app/node_modules
      - $BACKEND_LOGS_LOCATION:/logs
      - $BACKEND_FILE_LOCATION:/app/mainFiles:ro
      - ipWho-Frontend-Build:/app/frontendBuild:ro
    depends_on:
      - redis
      - frontend-build

  redis:
    image: redis
    container_name: ipWho_redis
    ports:
      - $REDIS_PORT:6379
    volumes:
      - redis-data:/data
#    command: redis-server --requirepass $REDIS_PASSWORD
    restart: unless-stopped

volumes:
  redis-data:
  ipWho-Frontend-Build: