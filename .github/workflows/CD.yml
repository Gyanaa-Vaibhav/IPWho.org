name: CD
on:
#  workflow_run:
#    workflows:
#      - "CI Main"
#    types:
#      - completed
  workflow_dispatch:

jobs:

#  Check_if_CI_Workflow_Succeed:
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
#    runs-on: self-hosted
#    steps:
#      - run: echo "Previous workflow ${{ github.event.workflow_run.name }} succeeded!"

  Image_Building:
    runs-on: [self-hosted, CI]
#    needs: Check_if_CI_Workflow_Succeed
    steps:
      - name: Pull Code
        uses: actions/checkout@v4

      - name: Build Backend Image
        working-directory: ./Backend
        run: |
          docker buildx build \
            -t registry.gyanaavaibhav.in/ipwho-backend-prod:latest \
            -t registry.gyanaavaibhav.in/ipwho-backend-prod:${{ github.sha }} \
            -f backend.build.Dockerfile \
            --push .

      - name: Build Frontend Image
        working-directory: ./Frontend
        run: |
          docker buildx build \
            -t registry.gyanaavaibhav.in/ipwho-frontend-prod:latest \
            -t registry.gyanaavaibhav.in/ipwho-frontend-prod:${{ github.sha }} \
            -f frontend.build.Dockerfile \
            --push .

  Run_Containers:
    runs-on: [self-hosted, k8s]
    needs: Image_Building
    steps:
      - name: Apply the new Config's
        working-directory: ./k8s
        run: kubectl apply -f .

      - name: Deploy new backend to Kubernetes
        run: |
          kubectl set image deployment/ipwho \
            ipwho=registry.gyanaavaibhav.in/ipwho-backend-prod:${{ github.sha }} \
            ipwho-frontend-build=registry.gyanaavaibhav.in/ipwho-frontend-prod:${{ github.sha }}

      - name: Wait for Deployment rollout
        run: kubectl rollout status deployment/ipwho --timeout=120s